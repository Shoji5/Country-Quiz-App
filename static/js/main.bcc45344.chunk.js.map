{"version":3,"sources":["images/1.svg","images/win.svg","components/Image.js","store/resultSlice.js","store/answerStateSlice.js","components/Choice.js","components/Quiz.js","components/Game.js","store/currentStateSlice.js","store/quizSlice.js","components/NavButton.js","components/GameView.js","components/Footer.js","store/loadStatusSlice.js","store/dataSlice.js","api/index.js","components/App.js","store/index.js","index.js"],"names":["module","exports","Image","currentState","src","img2","alt","className","img1","resultSlice","createSlice","name","initialState","reducers","getPoint","state","resetResult","actions","reducer","answerStateSlice","trueAnswer","noAnswer","falseAnswer","mapDispatchToProps","connect","correctAns","quiz","correctAnswer","answerState","ans","children","useState","ticked","changeTicked","useEffect","onClick","setTimeout","disabled","Check","Add","style","transform","arr","type","capital","choices","map","choice","i","key","flagURL","result","currentStateSlice","play","end","getRandom","min","max","Math","floor","random","getChoices","data","hash","res","pos","length","sort","quizSlice","getNewQuiz","action","r","payload","flag","Footer","href","loadStatusSlice","loadSuccessful","loadFailed","loadData","createAsyncThunk","a","dispatch","fetch","then","json","catch","extraReducers","fulfilled","store","configureStore","currentStateReducer","resultReducer","dataReducer","loadStatus","loadStatusReducer","quizReducer","answerStateReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcc45344.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.eae25da4.svg\";","module.exports = __webpack_public_path__ + \"static/media/win.82d9605a.svg\";","import React from \"react\";\r\nimport img1 from \"../images/1.svg\";\r\nimport img2 from \"../images/win.svg\";\r\nimport \"./Image.css\";\r\n\r\nexport default function Image({ currentState }) {\r\n    if (currentState === \"END\")\r\n        return <img src={img2} alt=\"\" className=\"end-img\" />;\r\n    else return <img src={img1} alt=\"\" className=\"play-img\" />;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst resultSlice = createSlice({\r\n    name: \"result\",\r\n    initialState: 0,\r\n    reducers: {\r\n        getPoint: (state) => state + 1,\r\n        resetResult: () => 0,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = resultSlice;\r\nexport const { getPoint, resetResult } = actions;\r\nexport { reducer as resultReducer };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst answerStateSlice = createSlice({\r\n    name: \"answerState\",\r\n    initialState: \"NONE\",\r\n    reducers: {\r\n        trueAnswer: () => \"TRUE\",\r\n        noAnswer: () => \"NONE\",\r\n        falseAnswer: () => \"FALSE\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = answerStateSlice;\r\nexport const { trueAnswer, noAnswer, falseAnswer } = actions;\r\nexport { reducer as answerStateReducer };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPoint } from \"../store/resultSlice\";\r\nimport { trueAnswer, falseAnswer } from \"../store/answerStateSlice\";\r\nimport \"./Choice.css\";\r\nimport { Add, Check } from \"@material-ui/icons\";\r\n\r\nexport const Choice = ({\r\n    ans,\r\n    children,\r\n    correctAns,\r\n    getPoint,\r\n    answerState,\r\n    trueAnswer,\r\n    falseAnswer,\r\n}) => {\r\n    const [ticked, changeTicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (answerState === \"NONE\") changeTicked(false);\r\n    }, [answerState]);\r\n\r\n    const choiceHandler = () => {\r\n        if (correctAns === children) {\r\n            getPoint();\r\n            setTimeout(trueAnswer, 1000);\r\n        } else setTimeout(falseAnswer, 1000);\r\n        changeTicked(true);\r\n    };\r\n\r\n    const classBtn = () => {\r\n        return (\r\n            \"choice\" +\r\n            (answerState !== \"NONE\" && correctAns === children ? \" true\" : \"\") +\r\n            (ticked ? \" tick\" : \"\")\r\n        );\r\n    };\r\n\r\n    const icon = () => {\r\n        if (answerState !== \"NONE\") {\r\n            if (correctAns === children) return <Check />;\r\n            else if (ticked)\r\n                return <Add style={{ transform: \"rotate(45deg)\" }} />;\r\n        } else return null;\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className={classBtn()}\r\n            onClick={choiceHandler}\r\n            disabled={answerState !== \"NONE\"}\r\n        >\r\n            <span>{ans}</span>\r\n            <span>{children}</span>\r\n            {icon()}\r\n        </button>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    correctAns: state.quiz.correctAnswer,\r\n    answerState: state.answerState,\r\n});\r\n\r\nconst mapDispatchToProps = { getPoint, trueAnswer, falseAnswer };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Choice);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Choice from \"./Choice\";\r\nimport \"./Quiz.css\";\r\n\r\nexport const Quiz = ({ quiz }) => {\r\n    const arr = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\n    if (quiz.type === \"CAPITAL\")\r\n        return (\r\n            <div className=\"game\">\r\n                <h3 className=\"question\">{quiz.capital} is the capital of</h3>\r\n                {quiz.choices.map((choice, i) => (\r\n                    <Choice key={i} ans={arr[i]}>\r\n                        {choice}\r\n                    </Choice>\r\n                ))}\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div className=\"game\">\r\n                <img src={quiz.flagURL} alt=\"\" className=\"flag\" />\r\n                <h3 className=\"question\">\r\n                    Which country does this flag belong to?\r\n                </h3>\r\n                {quiz.choices.map((choice, i) => (\r\n                    <Choice key={i} ans={arr[i]}>\r\n                        {choice}\r\n                    </Choice>\r\n                ))}\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ quiz: state.quiz });\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Quiz from \"./Quiz\";\r\nimport \"./Game.css\";\r\n\r\nexport const Game = ({ currentState, quiz, result }) => {\r\n    if (currentState === \"START\") return null;\r\n    else if (currentState === \"PLAY\") return <Quiz />;\r\n    else if (currentState === \"END\")\r\n        return (\r\n            <div className=\"result\">\r\n                <h3 className=\"title\">Results</h3>\r\n                <p className=\"content\">\r\n                    You got<span> {result} </span>correct answers\r\n                </p>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    currentState: state.currentState,\r\n    result: state.result,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst currentStateSlice = createSlice({\r\n    name: \"currentState\",\r\n    initialState: \"START\",\r\n    reducers: {\r\n        play: () => \"PLAY\",\r\n        end: () => \"END\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = currentStateSlice;\r\nexport const { play, end } = actions;\r\nexport { reducer as currentStateReducer };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getRandom = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\nconst getChoices = (data, correctAnswer) => {\r\n    const hash = { [correctAnswer]: true };\r\n    const res = [{}, {}, {}].map(() => {\r\n        let pos = getRandom(0, data.length);\r\n        while (hash[data[pos]]) pos = getRandom(0, data.length);\r\n        hash[data[pos].name] = true;\r\n        return data[pos].name;\r\n    });\r\n    return [...res, correctAnswer].sort(() => Math.random() - 0.5);\r\n};\r\n\r\nconst quizSlice = createSlice({\r\n    name: \"quiz\",\r\n    initialState: {},\r\n    reducers: {\r\n        getNewQuiz: (state, action) => {\r\n            let r = getRandom(0, action.payload.length);\r\n            let res = {\r\n                correctAnswer: action.payload[r].name,\r\n                choices: getChoices(action.payload, action.payload[r].name),\r\n            };\r\n            if (getRandom(0, 2) === 0) {\r\n                res.type = \"CAPITAL\";\r\n                res.capital = action.payload[r].capital;\r\n            } else {\r\n                res.type = \"FLAG\";\r\n                res.flagURL = action.payload[r].flag;\r\n            }\r\n            return res;\r\n        },\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = quizSlice;\r\nexport const { getNewQuiz } = actions;\r\nexport { reducer as quizReducer };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { play, end } from \"../store/currentStateSlice\";\r\nimport { getNewQuiz } from \"../store/quizSlice\";\r\nimport { noAnswer } from \"../store/answerStateSlice\";\r\nimport { resetResult } from \"../store/resultSlice\";\r\nimport \"./NavButton.css\";\r\n\r\nexport const NavButton = ({\r\n    data,\r\n    currentState,\r\n    answerState,\r\n    play,\r\n    end,\r\n    getNewQuiz,\r\n    noAnswer,\r\n    resetResult,\r\n}) => {\r\n    const startHandler = () => {\r\n        play();\r\n        getNewQuiz(data);\r\n    };\r\n\r\n    const nextHandler = () => {\r\n        if (answerState === \"TRUE\") {\r\n            getNewQuiz(data);\r\n            noAnswer();\r\n        } else end();\r\n    };\r\n\r\n    const againHandler = () => {\r\n        play();\r\n        resetResult();\r\n        noAnswer();\r\n        getNewQuiz(data);\r\n    };\r\n\r\n    if (currentState === \"START\")\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                {\" \"}\r\n                <button className=\"start-btn\" onClick={startHandler}>\r\n                    START\r\n                </button>\r\n            </div>\r\n        );\r\n    else if (currentState === \"END\")\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                <button className=\"again-btn\" onClick={againHandler}>\r\n                    AGAIN\r\n                </button>\r\n            </div>\r\n        );\r\n    else if (answerState === \"NONE\") return null;\r\n    else\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                <button className=\"next-btn\" onClick={nextHandler}>\r\n                    NEXT\r\n                </button>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    currentState: state.currentState,\r\n    answerState: state.answerState,\r\n});\r\n\r\nconst mapDispatchToProps = { play, end, getNewQuiz, noAnswer, resetResult };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./GameView.css\";\r\nimport Image from \"./Image\";\r\nimport Game from \"./Game\";\r\nimport NavButton from \"./NavButton\";\r\n\r\nexport const GameView = ({ currentState }) => {\r\n    return (\r\n        <div className=\"game-view\">\r\n            <h2>COUNTRY QUIZ</h2>\r\n            <Image currentState={currentState} />\r\n            <Game />\r\n            <NavButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ currentState: state.currentState });\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameView);\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                <a href=\"https://github.com/Shoji5\">Tuấn Vũ</a> @{\" \"}\r\n                <a href=\"https://devchallenges.io/\">DevChallenges.io</a>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loadStatusSlice = createSlice({\r\n    name: \"loadStatus\",\r\n    initialState: \"LOADING\",\r\n    reducers: {\r\n        loadSuccessful: () => \"SUCCESS\",\r\n        loadFailed: () => \"ERROR\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = loadStatusSlice;\r\nexport const { loadSuccessful, loadFailed } = actions;\r\nexport { reducer as loadStatusReducer };\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAll } from \"../api\";\r\nimport { loadSuccessful, loadFailed } from \"./loadStatusSlice\";\r\n\r\nconst loadData = createAsyncThunk(\r\n    \"data/loadData\",\r\n    async (payload, { dispatch }) => {\r\n        const data = await getAll()\r\n            .then((res) => {\r\n                dispatch(loadSuccessful());\r\n                return res.json();\r\n            })\r\n            .catch(() => dispatch(loadFailed()));\r\n        return data;\r\n    }\r\n);\r\n\r\nconst dataSlice = createSlice({\r\n    name: \"data\",\r\n    initialState: [],\r\n    extraReducers: {\r\n        [loadData.fulfilled]: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { reducer } = dataSlice;\r\n// const { getData } = actions;\r\nexport { loadData };\r\nexport { reducer as dataReducer };\r\n","const url = \"https://restcountries.eu/rest/v2/all\";\r\nexport const getAll = () => {\r\n    return fetch(url);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GameView from \"./GameView\";\r\nimport Footer from \"./Footer\";\r\nimport { loadData } from \"../store/dataSlice\";\r\n\r\nexport const App = ({ loadData }) => {\r\n    useEffect(() => {\r\n        loadData();\r\n    });\r\n    return (\r\n        <>\r\n            <GameView />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = { loadData };\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { currentStateReducer } from \"./currentStateSlice\";\r\nimport { resultReducer } from \"./resultSlice\";\r\nimport { dataReducer } from \"./dataSlice\";\r\nimport { loadStatusReducer } from \"./loadStatusSlice\";\r\nimport { quizReducer } from \"./quizSlice\";\r\nimport { answerStateReducer } from \"./answerStateSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        currentState: currentStateReducer,\r\n        result: resultReducer,\r\n        data: dataReducer,\r\n        loadStatus: loadStatusReducer,\r\n        quiz: quizReducer,\r\n        answerState: answerStateReducer,\r\n    },\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}