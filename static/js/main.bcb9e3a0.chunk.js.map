{"version":3,"sources":["images/1.svg","images/win.svg","components/Image.js","store/resultSlice.js","store/quizSlice.js","store/answerStateSlice.js","components/Choice.js","components/Quiz.js","components/Game.js","store/currentStateSlice.js","components/NavButton.js","components/GameView.js","components/Footer.js","store/loadStatusSlice.js","store/dataSlice.js","api/index.js","components/App.js","store/index.js","index.js"],"names":["module","exports","Image","currentState","src","img2","alt","className","img1","resultSlice","createSlice","name","initialState","reducers","getPoint","state","resetResult","actions","reducer","getRandom","min","max","Math","floor","random","quizSlice","getNewQuiz","action","r","payload","length","choices","data","res","i","pos","includes","push","getChoices","correctAnswer","type","capital","flagURL","flag","answerStateSlice","trueAnswer","falseAnswer","extraReducers","mapDispatchToProps","connect","correctAns","quiz","answerState","ans","children","useState","ticked","changeTicked","useEffect","onClick","setTimeout","disabled","Check","Add","style","transform","arr","map","choice","key","result","currentStateSlice","play","end","Footer","href","loadStatusSlice","loadSuccessful","loadFailed","loadData","createAsyncThunk","a","dispatch","fetch","then","json","catch","fulfilled","store","configureStore","currentStateReducer","resultReducer","dataReducer","loadStatus","loadStatusReducer","quizReducer","answerStateReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb9e3a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.eae25da4.svg\";","module.exports = __webpack_public_path__ + \"static/media/win.82d9605a.svg\";","import React from \"react\";\r\nimport img1 from \"../images/1.svg\";\r\nimport img2 from \"../images/win.svg\";\r\nimport \"./Image.css\";\r\n\r\nexport default function Image({ currentState }) {\r\n    if (currentState === \"END\")\r\n        return <img src={img2} alt=\"\" className=\"end-img\" />;\r\n    else return <img src={img1} alt=\"\" className=\"play-img\" />;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst resultSlice = createSlice({\r\n    name: \"result\",\r\n    initialState: 0,\r\n    reducers: {\r\n        getPoint: (state) => state + 1,\r\n        resetResult: () => 0,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = resultSlice;\r\nexport const { getPoint, resetResult } = actions;\r\nexport { reducer as resultReducer };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getRandom = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\nconst getChoices = (data) => {\r\n    const res = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        let pos = getRandom(0, data.length);\r\n        while (res.includes(data[pos].name)) pos = getRandom(0, data.length);\r\n        res.push(data[pos].name);\r\n    }\r\n    return res;\r\n};\r\n\r\nconst quizSlice = createSlice({\r\n    name: \"quiz\",\r\n    initialState: {},\r\n    reducers: {\r\n        getNewQuiz: (state, action) => {\r\n            let r = getRandom(0, action.payload.length);\r\n            let choices = getChoices(action.payload);\r\n            let res = {\r\n                correctAnswer: choices[getRandom(0, 4)],\r\n                choices,\r\n            };\r\n            if (getRandom(0, 2) === 0) {\r\n                res.type = \"CAPITAL\";\r\n                res.capital = action.payload[r].capital;\r\n            } else {\r\n                res.type = \"FLAG\";\r\n                res.flagURL = action.payload[r].flag;\r\n            }\r\n            return res;\r\n        },\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = quizSlice;\r\nexport const { getNewQuiz } = actions;\r\nexport { reducer as quizReducer };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getNewQuiz } from \"./quizSlice\";\r\n\r\nconst answerStateSlice = createSlice({\r\n    name: \"answerState\",\r\n    initialState: \"NONE\",\r\n    reducers: {\r\n        trueAnswer: () => \"TRUE\",\r\n        falseAnswer: () => \"FALSE\",\r\n    },\r\n    extraReducers: {\r\n        [getNewQuiz]: () => \"NONE\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = answerStateSlice;\r\nexport const { trueAnswer, falseAnswer } = actions;\r\nexport { reducer as answerStateReducer };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPoint } from \"../store/resultSlice\";\r\nimport { trueAnswer, falseAnswer } from \"../store/answerStateSlice\";\r\nimport \"./Choice.css\";\r\nimport { Add, Check } from \"@material-ui/icons\";\r\n\r\nexport const Choice = ({\r\n    ans,\r\n    children,\r\n    correctAns,\r\n    getPoint,\r\n    answerState,\r\n    trueAnswer,\r\n    falseAnswer,\r\n}) => {\r\n    const [ticked, changeTicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (answerState === \"NONE\") changeTicked(false);\r\n    }, [answerState]);\r\n\r\n    const choiceHandler = () => {\r\n        if (correctAns === children) {\r\n            getPoint();\r\n            setTimeout(trueAnswer, 1000);\r\n        } else setTimeout(falseAnswer, 1000);\r\n        changeTicked(true);\r\n    };\r\n\r\n    const classBtn = () => {\r\n        return (\r\n            \"choice\" +\r\n            (answerState !== \"NONE\" && correctAns === children ? \" true\" : \"\") +\r\n            (ticked ? \" tick\" : \"\")\r\n        );\r\n    };\r\n\r\n    const icon = () => {\r\n        if (answerState !== \"NONE\") {\r\n            if (correctAns === children) return <Check />;\r\n            else if (ticked)\r\n                return <Add style={{ transform: \"rotate(45deg)\" }} />;\r\n        } else return null;\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className={classBtn()}\r\n            onClick={choiceHandler}\r\n            disabled={answerState !== \"NONE\"}\r\n        >\r\n            <span>{ans}</span>\r\n            <span>{children}</span>\r\n            {icon()}\r\n        </button>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    correctAns: state.quiz.correctAnswer,\r\n    answerState: state.answerState,\r\n});\r\n\r\nconst mapDispatchToProps = { getPoint, trueAnswer, falseAnswer };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Choice);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Choice from \"./Choice\";\r\nimport \"./Quiz.css\";\r\n\r\nexport const Quiz = ({ quiz }) => {\r\n    const arr = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\n    if (quiz.type === \"CAPITAL\")\r\n        return (\r\n            <div className=\"game\">\r\n                <h3 className=\"question\">{quiz.capital} is the capital of</h3>\r\n                {quiz.choices.map((choice, i) => (\r\n                    <Choice key={i} ans={arr[i]}>\r\n                        {choice}\r\n                    </Choice>\r\n                ))}\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div className=\"game\">\r\n                <img src={quiz.flagURL} alt=\"\" className=\"flag\" />\r\n                <h3 className=\"question\">\r\n                    Which country does this flag belong to?\r\n                </h3>\r\n                {quiz.choices.map((choice, i) => (\r\n                    <Choice key={i} ans={arr[i]}>\r\n                        {choice}\r\n                    </Choice>\r\n                ))}\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ quiz: state.quiz });\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Quiz from \"./Quiz\";\r\nimport \"./Game.css\";\r\n\r\nexport const Game = ({ currentState, result }) => {\r\n    if (currentState === \"START\") return null;\r\n    else if (currentState === \"PLAY\") return <Quiz />;\r\n    else if (currentState === \"END\")\r\n        return (\r\n            <div className=\"result\">\r\n                <h3 className=\"title\">Results</h3>\r\n                <p className=\"content\">\r\n                    You got<span> {result} </span>correct answers\r\n                </p>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentState: state.currentState,\r\n    result: state.result,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst currentStateSlice = createSlice({\r\n    name: \"currentState\",\r\n    initialState: \"START\",\r\n    reducers: {\r\n        play: () => \"PLAY\",\r\n        end: () => \"END\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = currentStateSlice;\r\nexport const { play, end } = actions;\r\nexport { reducer as currentStateReducer };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { play, end } from \"../store/currentStateSlice\";\r\nimport { getNewQuiz } from \"../store/quizSlice\";\r\nimport { resetResult } from \"../store/resultSlice\";\r\nimport \"./NavButton.css\";\r\n\r\nexport const NavButton = ({\r\n    data,\r\n    currentState,\r\n    answerState,\r\n    play,\r\n    end,\r\n    getNewQuiz,\r\n    resetResult,\r\n}) => {\r\n    const startHandler = () => {\r\n        play();\r\n        getNewQuiz(data);\r\n    };\r\n\r\n    const nextHandler = () => {\r\n        if (answerState === \"TRUE\") {\r\n            getNewQuiz(data);\r\n        } else end();\r\n    };\r\n\r\n    const againHandler = () => {\r\n        play();\r\n        resetResult();\r\n        getNewQuiz(data);\r\n    };\r\n\r\n    if (currentState === \"START\")\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                {\" \"}\r\n                <button className=\"start-btn\" onClick={startHandler}>\r\n                    START\r\n                </button>\r\n            </div>\r\n        );\r\n    else if (currentState === \"END\")\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                <button className=\"again-btn\" onClick={againHandler}>\r\n                    AGAIN\r\n                </button>\r\n            </div>\r\n        );\r\n    else if (answerState === \"NONE\") return null;\r\n    else\r\n        return (\r\n            <div className=\"nav-btn\">\r\n                <button className=\"next-btn\" onClick={nextHandler}>\r\n                    NEXT\r\n                </button>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    currentState: state.currentState,\r\n    answerState: state.answerState,\r\n});\r\n\r\nconst mapDispatchToProps = { play, end, getNewQuiz, resetResult };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./GameView.css\";\r\nimport Image from \"./Image\";\r\nimport Game from \"./Game\";\r\nimport NavButton from \"./NavButton\";\r\n\r\nexport const GameView = ({ currentState }) => {\r\n    return (\r\n        <div className=\"game-view\">\r\n            <h2>COUNTRY QUIZ</h2>\r\n            <Image currentState={currentState} />\r\n            <Game />\r\n            <NavButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ currentState: state.currentState });\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameView);\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                <a href=\"https://github.com/Shoji5\">Tuấn Vũ</a> @{\" \"}\r\n                <a href=\"https://devchallenges.io/\">DevChallenges.io</a>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loadStatusSlice = createSlice({\r\n    name: \"loadStatus\",\r\n    initialState: \"LOADING\",\r\n    reducers: {\r\n        loadSuccessful: () => \"SUCCESS\",\r\n        loadFailed: () => \"ERROR\",\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = loadStatusSlice;\r\nexport const { loadSuccessful, loadFailed } = actions;\r\nexport { reducer as loadStatusReducer };\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAll } from \"../api\";\r\nimport { loadSuccessful, loadFailed } from \"./loadStatusSlice\";\r\n\r\nconst loadData = createAsyncThunk(\r\n    \"data/loadData\",\r\n    async (payload, { dispatch }) => {\r\n        const data = await getAll()\r\n            .then((res) => {\r\n                dispatch(loadSuccessful());\r\n                return res.json();\r\n            })\r\n            .catch(() => dispatch(loadFailed()));\r\n        return data;\r\n    }\r\n);\r\n\r\nconst dataSlice = createSlice({\r\n    name: \"data\",\r\n    initialState: [],\r\n    extraReducers: {\r\n        [loadData.fulfilled]: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { reducer } = dataSlice;\r\n// const { getData } = actions;\r\nexport { loadData };\r\nexport { reducer as dataReducer };\r\n","const url = \"https://restcountries.eu/rest/v2/all\";\r\nexport const getAll = () => {\r\n    return fetch(url);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GameView from \"./GameView\";\r\nimport Footer from \"./Footer\";\r\nimport { loadData } from \"../store/dataSlice\";\r\n\r\nexport const App = ({ loadData }) => {\r\n    useEffect(() => {\r\n        loadData();\r\n    });\r\n    return (\r\n        <>\r\n            <GameView />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = { loadData };\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { currentStateReducer } from \"./currentStateSlice\";\r\nimport { resultReducer } from \"./resultSlice\";\r\nimport { dataReducer } from \"./dataSlice\";\r\nimport { loadStatusReducer } from \"./loadStatusSlice\";\r\nimport { quizReducer } from \"./quizSlice\";\r\nimport { answerStateReducer } from \"./answerStateSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        currentState: currentStateReducer,\r\n        result: resultReducer,\r\n        data: dataReducer,\r\n        loadStatus: loadStatusReducer,\r\n        quiz: quizReducer,\r\n        answerState: answerStateReducer,\r\n    },\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}